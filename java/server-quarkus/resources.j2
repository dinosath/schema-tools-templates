{# type=endpoints,filename=src/main/java/%options.package%/resources/Resources.java,min_version=0.2.0 #}
{% import "macros.j2" as m -%}

package {{options.package}}.resources;
import {{options.package}}.models.*;
import {{options.package}}.repositories.*;
import java.util.List;
import java.util.Map;
import jakarta.persistence.*;
import jakarta.transaction.*;
import jakarta.validation.Valid;
import jakarta.inject.*;

import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

public class Resources{

    {% for endpoint in endpoints %}
    {% set request_body_type_string = m::request_body_type_string(endpoint=endpoint) -%}
    {% if response_type_string and endpoint.method|upper == "POST"-%}
    //@Inject
    //{{ request_body_type_string }}Repository {{ request_body_type_string | camelcase}}Repository;
    {% endif -%}
    {% endfor -%}
    
    {% for endpoint in endpoints -%}
    {% set request_body_type_string = m::request_body_type_string(endpoint=endpoint) -%}
    //@Transactional
    //{{ m::endpoint_consumes(endpoint=endpoint) }}
    //@Path("{{ endpoint.path }}")
    //@{{ endpoint.method | upper}}
    {% set response_type = m::response_type(endpoint=endpoint) -%}
    //public {{ response_type }} {{endpoint.operation}}({{ m::request_arguments(endpoint=endpoint) }}){
        {% if not response_type | trim == "void" -%}
      //  return 
        {% endif -%}
        {%- if endpoint.method | upper == "POST" -%}
        //{{ request_body_type_string | camelcase }}Repository.save( {{ request_body_type_string | camelcase }} );
        {%- elif endpoint.method | upper == "PUT" and m::contain_pathparam_with_id(endpoint=endpoint) -%}
        //{{ request_body_type_string | camelcase }}Repository.persist( {{ request_body_type_string | camelcase }} );
        {%- elif endpoint.method | upper == "PUT" -%}
        //{{ request_body_type_string | camelcase }}Repository.persist( {{ request_body_type_string | camelcase }} );
        {%- elif endpoint.method | upper == "PUT" -%}
        //{{ request_body_type_string | camelcase }}Repository.persist( {{ request_body_type_string | camelcase }} );
        {%- elif endpoint.method | upper == "DELETE" -%}
        {% set path_split = endpoint.path | split(pat="/") -%}
        //{{ path_split | nth(n=1) }}Repository.delete( {{ path_split | nth(n=2) |replace(from="{", to="" )|replace(from="}", to="" )  }} );
        {% endif %}

 //   }
    {% endfor -%}
}