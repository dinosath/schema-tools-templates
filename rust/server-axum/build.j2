{# type=static,filename=build.rs,min_version=0.5.0 #}

use std::{env, path::PathBuf};

// use testcontainers::*;
// use testcontainers::images::generic::GenericImage;
// use testcontainers::core::WaitFor;
// use testcontainers::images::postgres::Postgres;
// use std::{thread, time};
// use std::process::Command;


fn main() -> Result<(), Box<dyn std::error::Error>> {
    let out_dir = PathBuf::from(env::var("OUT_DIR").unwrap());

    tonic_build::configure()
        .file_descriptor_set_path(out_dir.join("crud_descriptor.bin"))
        .compile(&["proto/crud.proto"], &["/proto"])
        .unwrap();

//    let docker = clients::Cli::default();
//    let postgres = Postgres::default();

//     let node = docker.run(postgres);
//     let time = time::Duration::from_secs(2);
//     Command::new("diesel")
//             .arg("setup")
//         .spawn()
//         .expect("ls command failed to start");


    Ok(())

}